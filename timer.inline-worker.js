export const worker = '"use strict";const ctx=self;var TimerMessageType;(function(TimerMessageType){TimerMessageType["Start"]="start";TimerMessageType["Stop"]="stop";TimerMessageType["IntervalMs"]="intervalMs"})(TimerMessageType||(TimerMessageType={}));const TICK_MESSAGE="tick";function isTimerMessage(message){return Object.values(TimerMessageType).includes(message.type)}const DEAD_TIMER_ID=-1;let timerId=DEAD_TIMER_ID;let intervalMs=25;function tick(){timerId=self.setInterval(()=>ctx.postMessage(TICK_MESSAGE),intervalMs)}ctx.addEventListener("message",event=>{const message=event.data;if(!isTimerMessage(message)){throw new Error("Message is not an ITimerMessage")}if(message.type===TimerMessageType.Start){tick()}else if(message.type===TimerMessageType.Stop){clearInterval(timerId);timerId=DEAD_TIMER_ID}else if(message.type===TimerMessageType.IntervalMs){if(message.intervalMs===undefined){throw new Error("intervalMs missing from ITimerMessage")}intervalMs=message.intervalMs;if(timerId!==DEAD_TIMER_ID){clearInterval(timerId);tick()}}});';